include ../svg-expand-icon/svg-expand-icon
include ../text-button/text-button

mixin dropdown(params)
  - 
    const {
      sectionNames = ['взрослые', 'дети', 'младенцы'],
      defaultSignature = 'Сколько гостей',
      narrow,
      hash,
      counterValues,
    } = params

    const attrs = {
      class: narrow && 'dropdown_narrow',
      'data-glossary': params.glossary || 'взрослые+дети, младенцы',
      'data-counter-values': counterValues,
      'data-hash': hash,
      'data-open': params.isOpen
    }

  .dropdown.js-dropdown&attributes(attrs)
    button.dropdown__expand-button.js-dropdown__expand-button&attributes({
      type: 'button',
      ...params.expandButtonAttrs
    })
      span.dropdown__signature.js-dropdown__signature 
        | #{defaultSignature.replace(/^./, (s) => s.toUpperCase())}
      .dropdown__expand-icon
        +svg-expand-icon
    ul.dropdown__list.js-dropdown__list.dropdown__list_hidden
      each name in sectionNames
        li.dropdown__list-section
          .dropdown__section-name.js-dropdown__section-name #{name}
          button.dropdown__decrease-button.js-dropdown__decrease-button.dropdown__decrease-button_disabled&attributes({
            type: 'button',
            ...params.decreaseButtonAttrs
          }) -
          .dropdown__counter.js-dropdown__counter 0
          button.dropdown__increase-button.js-dropdown__increase-button&attributes({
          type: 'button',
          ...params.increaseButtonAttrs
          }) +
      unless narrow
        li.dropdown__control-buttons-container
          .dropdown__apply-button.js-dropdown__apply-button
            +text-button({text: 'применить'})
          .dropdown__cancel-button.js-dropdown__cancel-button.dropdown__cancel-button_hidden
            +text-button({text: 'очистить'})

